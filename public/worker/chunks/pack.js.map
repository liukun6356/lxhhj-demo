{"version":3,"file":"pack.js","sources":["../../../lib/utils/glsl/pack.ts"],"sourcesContent":["//reference: https://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\r\n// r = v - f(v*255)/255;\r\n// g = f(v*255) - f(v*255^2)/255;\r\n// b = f(v*255^2) - f(v*255^3)/255;\r\n// a = f(v*255^3) - f(v*255^4)/255 ≈ f(v*255^3)\r\nexport const glsl_pack = `\r\n//v ∈ [0,1]\r\nvec4 packNormalizeFloatToRGBA( in highp float v ) {\r\n    vec4 enc = vec4(v, fract(vec3(255.0, 65025.0, 16581375.0) * v));\r\n    enc.xyz -= enc.yzw / 255.0; \r\n    return enc;\r\n}\r\nfloat unpackRGBAToNormalizeFloat( const in highp vec4 v ) {\r\n    return dot(v, vec4(1, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0));\r\n}\r\nvec3 packNormalizeFloatToRGB( in highp float v ) {\r\n\treturn packNormalizeFloatToRGBA( v ).xyz;\r\n}\r\nfloat unpackRGBToNormalizeFloat( const in highp vec3 v ) {\r\n\treturn unpackRGBAToNormalizeFloat( vec4( v, 0 ) );\r\n}\r\nvec2 packNormalizeFloatToRG( in highp float v ) {\r\n\treturn packNormalizeFloatToRGBA( v ).xy;\r\n}\r\nfloat unpackRGToNormalizeFloat( const in highp vec2 v ) {\r\n\treturn unpackRGBAToNormalizeFloat( vec4( v, 0, 0 ) );\r\n}\r\n`;\r\nfunction fract(v: number) {\r\n    return v - Math.floor(v);\r\n}\r\n\r\nexport function packNormalizeFloatToRGBA(v: number) {\r\n    if (v < 0 || v > 1) throw new Error(\"值不满足value ∈ [0, 1]\");\r\n    // v = v * 255;\r\n    // const r = Math.floor(v);\r\n    // v = (v - r) * 255;\r\n    // const g = Math.floor(v);\r\n    // v = (v - g) * 255;\r\n    // const b = Math.floor(v);\r\n    // v = (v - b) * 255;\r\n    // const a = Math.floor(v);\r\n    // return [r, g, b, a].map((i) => i / 255);\r\n    const enc = [v, fract(v * 255), fract(v * 255 ** 2), fract(v * 255 ** 3)];\r\n    return [\r\n        enc[0] - enc[1] / 255,\r\n        enc[1] - enc[2] / 255,\r\n        enc[2] - enc[3] / 255,\r\n        enc[3], //\r\n    ];\r\n}\r\nexport function unpackRGBAToNormalizeFloat(rgba: number[]) {\r\n    const [r, g, b, a] = rgba;\r\n    return r + g / 255 + b / 255 ** 2 + a / 255 ** 3;\r\n}\r\n"],"names":[],"mappings":";;IAAA;IACA;IACA;IACA;IACA;AACa,UAAA,SAAS,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;EAsBvB;IACF,SAAS,KAAK,CAAC,CAAS,EAAA;QACpB,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC;IAEK,SAAU,wBAAwB,CAAC,CAAS,EAAA;IAC9C,IAAA,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;IAAE,QAAA,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;;;;;;;;;;IAU1D,IAAA,MAAM,GAAG,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1E,OAAO;YACH,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG;YACrB,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG;YACrB,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG;IACrB,QAAA,GAAG,CAAC,CAAC,CAAC;SACT,CAAC;IACN,CAAC;IACK,SAAU,0BAA0B,CAAC,IAAc,EAAA;QACrD,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;IAC1B,IAAA,OAAO,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC;IACrD;;;;;;;;"}